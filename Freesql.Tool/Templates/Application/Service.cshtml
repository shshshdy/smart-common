@using Freesql.Tool.Helpers
@{
    var gen = Model as Freesql.Tool.Models.RazorTemplateModel;
}

using System.Collections.Generic;
using AutoMapper;
using @(gen.NameSpace).Shared.Dtos;
using @(gen.NameSpace).Application.Services.interfaces;
using @(gen.NameSpace).Domain.Managers.Interfaces;
using @(gen.NameSpace).Domain.Entities;
using Microsoft.Extensions.Logging;
using Panda.DynamicWebApi.Attributes;
using Smart.Application;
using Smart.Application.Attributes;
using Smart.Shared.Dto;

namespace @(gen.NameSpace).Application.Services
{
    [DynamicWebApi]
    public class @(gen.TableName)Service: BaseService<@(gen.TableName)Service>, I@(gen.TableName)Service
    {
        I@(gen.TableName)Manager _manager;
        IMapper _mapper;
        public @(gen.TableName)Service(I@(gen.TableName)Manager @(gen.TableName)Manager, IMapper mapper, ILogger<@(gen.TableName)Service> logger):base(logger)
        {
            _manager = @(gen.TableName)Manager;
            _mapper = mapper;
        }
        /// <summary>
        /// 获取指定ID
        ///</summary>
        ///<param name="id"></param>
        /// <returns></returns>
        public IResponseOutput Get(long id)
        {
            var model =_manager.Get(id);
            var result = _mapper.Map<@(gen.TableName)OutputDto>(model);
            return Ok(result);
        }
        /// <summary>
        /// 获取所有
        ///</summary>
        ///<param name="input"></param>
        /// <returns></returns>
        public IResponseOutput GetAll(@(gen.TableName)InputDto input)
        {
            var result = _manager.GetAll(input.PageIndex, input.PageSize);
            var count = _manager.Count();
            var output = new @(gen.TableName)ListOutputDto { List = _mapper.Map<List<@(gen.TableName)OutputDto>>(result), TotalPageSize = count };
            return Ok(output);
        }

        /// <summary>
        /// 编辑
        ///</summary>
        ///<param name="dto"></param>
        /// <returns></returns>
        public IResponseOutput RegisterOrUpdate(@(gen.TableName)OutputDto dto)
        {
            var result = _manager.CreatOrUpdate(_mapper.Map<@(gen.TableName)>(dto));
            return Ok(_mapper.Map<@(gen.TableName)OutputDto>(result));
        }
    }
}
